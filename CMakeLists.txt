cmake_minimum_required(VERSION 3.15)
include(cmake/prefix.cmake)
project(mpicheck CXX)
include(cmake/postfix.cmake)

find_package(MPI REQUIRED)
find_package(OpenMP)

set(PROGS mpicheck)
foreach(name ${PROGS})
  add_executable(${name} ${name}.cpp)
  target_link_libraries(${name} PUBLIC MPI::MPI_CXX)
  if(OpenMP_CXX_FOUND)
    target_link_libraries(${name} PUBLIC OpenMP::OpenMP_CXX)
  endif()
endforeach()

find_package(Python REQUIRED)
execute_process(COMMAND ${Python_EXECUTABLE} -m venv ${CMAKE_BINARY_DIR}/venv)
set(ENV{VIRTUAL_ENV} ${CMAKE_BINARY_DIR}/venv)
set(Python_FIND_VIRTUALENV FIRST)
unset(Python_EXECUTABLE)
find_package(Python REQUIRED)
execute_process(COMMAND ${Python_EXECUTABLE} -m pip install --upgrade pip)
execute_process(COMMAND ${Python_EXECUTABLE} -m pip install -r ${CMAKE_SOURCE_DIR}/requirements.txt)
